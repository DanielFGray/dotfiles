#!/usr/bin/env bash

esc=$(printf '\033')
c_reset="${esc}[0m"
c_red="${esc}[31m"
c_green="${esc}[32m"
c_blue="${esc}[34m"

inTerm() {
  [[ -t 0 || -p /dev/stdin ]]
}

isRunning() {
  pgrep $1 &> /dev/null
}

info() {
  if inTerm; then
    echo -e "${c_blue}$1${c_reset}" >&2
  else
    zenity --info --text="$*"
  fi
}

err() {
  if inTerm; then
    echo -e "${c_red}$1${c_reset}" >&2
  else
    zenity --error --text="$*"
  fi
}

die() {
  [[ -n "$1" ]] && err "$1"
  exit 1
}

has() {
  verbose=false
  if [[ $1 == '-v' ]]; then
    verbose=true
    shift
  fi
  if command -v $1 &> /dev/null; then
    return 0
  else
    [[ "$verbose" == true ]] && err "$1 not found"
    return 1
  fi
}

ask() {
  if inTerm; then
    read -n1 -p "$* " ans
    echo
    [[ ${ans^} == Y* ]]
  else
    zenity --question --text="$@"
  fi
}

prompt() {
  local opts=()
  if [[ "$1" == '-1' ]]; then
    opts+=( '-n1' )
    shift
  fi
  if [[ "$1" == '-s' ]]; then
    opts+=( '-s' )
    shift
  fi
  read -e -r ${opts[*]} -p "$@ " ans
  if [[ $one == '1' ]]; then
    echo
    [[ ${ans,} == y ]]
  else
    echo "$ans"
  fi
}

getCommandFallbacks() {
  for arg in "$@"; do
    if has $arg; then
      echo "$arg"
      return 0
    fi
  done
  return 1
}
