#!/usr/bin/env bash

usage() {
	cat <<'HELP'
-s    string to search
-c    command to execute [defaults to vim]
-a    search all text files
HELP
}

has() {
	command -v "$1" &> /dev/null
}

err() {
	echo -e "\e[31m$1\e[0m" >&2
}

setCmd() {
	 if has $1; then
		cmd="$1"
	else
		err "$1 is not a valid command"
		exit 1
	fi
}

if ! has 'fzf'; then
	err 'requires fzf installed'
	exit 1
fi

cmd='vim'
cmdopts=()
searchstr=''
searchcmd=''
searchopts=( '-l' )

while getopts "hs:c:" opt; do
	case "$opt" in
		h) usage; exit 0         ;;
		c) setCmd "$OPTARG"      ;;
		a) searchopts+=( "$OPTARG" ) ;;
	esac
done
shift "$((OPTIND-1))"

for c in 'pt' 'ag' 'ack' 'grep'; do
	if has "$c"; then
		searchcmd="$c"
		break
	fi
done

if [[ $searchcmd  == 'grep' ]]; then
	err 'you should strongly consider installing ag or ack'
fi

if [[ -n "$1" ]]; then
	searchstr="$1";
	shift
fi

if [[ "$searchstr" != '' ]]; then
	searchopts+=( "'$searchstr'" )
	if [[ "$cmd" == 'vim' ]]; then
		cmdopts+=( " +'/$searchstr'" )
	fi
else
	case "$searchcmd" in
		# 'pt')
		# 	searchopts+=()
		# 	;;
		# 'ag')
		# 	searchopts+=()
		# 	;;
		'ack')
			searchopts+=("")
			;;
		'grep')
			searchopts+=( '--exclude-dir=bower_components' '--exclude-dir=node_modules' '--exclude-dir=.cvs' '--exclude-dir=.git' '--exclude-dir=.hg' '--exclude-dir=.svn' )
			searchopts+=( '-I' '-r' '')
	esac
fi

# err "$searchcmd ${searchopts[@]}"
mapfile -t files < <("$searchcmd" "${searchopts[@]}" | fzf -e -m --reverse +s)

if [[ ${#files[@]} == 0 ]]; then
	# err 'no files selected, exiting'
	exit 0
fi

exec $cmd "${cmdopts[@]}" "${files[@]}"
