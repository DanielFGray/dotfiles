#!/usr/bin/env bash

usage() {
	more <<'HELP'
fv [OPTIONS] [SEARCH]
fuzzy file filtering and command executing

-c    command to execute [defaults to vim]
-a    search all dirs and hidden files (still quirky)
HELP
}

has() {
	command -v "$1" &> /dev/null
}

err() {
	echo -e "\e[31m$1\e[0m" >&2
}

setCmd() {
	 if has $1; then
		cmd="$1"
	else
		err "$1 is not a valid command"
		exit 1
	fi
}

if ! has 'fzf'; then
	err 'requires fzf installed'
	exit 1
fi

cmd='vim'
cmdopts=()
searchstr=''
searchcmd=''
searchopts=()
allfiles=false

while getopts "hac:" opt; do
	case "$opt" in
		h) usage; exit 0    ;;
		a) allfiles=true     ;;
		c) setCmd "$OPTARG" ;;
	esac
done
shift "$((OPTIND-1))"

if [[ "$cmd" == 'vim' && -n "$DISPLAY" ]] && has v; then
	cmd='v'
fi

for c in 'ag' 'ack' 'grep'; do
	if has "$c"; then
		searchcmd="$c"
		break
	fi
done

if [[ $searchcmd  == 'grep' ]]; then
	err 'you should strongly consider installing ag or ack'
	sleep .5
fi

if [[ -n "$1" ]]; then
	searchstr="$1";
	shift
fi

case "$searchcmd" in
	'ag')
		searchopts+=( '-l' )
		if [[ "$allfiles" == true ]]; then
			searchopts+=( '-a' '--hidden' )
			if [[ "$searchstr" == '' ]]; then
				searchopts+=( '-g' '' )
			fi
		else
			searchopts+=( '-t' )
		fi
		;;
	'ack')
		if [[ "$searchstr" == '' ]]; then
			if [[ "$allfiles" == false ]]; then
				searchopts+=( '-g' '^[^\.]' )
			else
				searchopts+=( '-f' )
			fi
		else
			searchopts+=( '-l' )
		# 	searchopts+=( '--match' )
		fi
		;;
	'grep')
		searchopts+=( '-l' '-r' )
		if [[ "$allfiles" == false ]]; then
			searchopts+=(
				'--exclude-dir=bower_components'
				'--exclude-dir=node_modules'
				'--exclude-dir=.cvs'
				'--exclude-dir=.git'
				'--exclude-dir=.hg'
				'--exclude-dir=.svn'
				'-I' 
			)
		fi
		if [[ "$searchstr" == '' ]]; then
			searchopts+=("")
		fi
		;;
esac

if [[ "$searchstr" != '' ]]; then
	searchopts+=( "$searchstr" )
fi

# err "$searchcmd ${searchopts[*]}" # verbose option?
mapfile -t files < <("$searchcmd" "${searchopts[@]}" 2> /dev/null | fzf -e -m --reverse)

if [[ ${#files[@]} == 0 ]]; then
	# err 'no files selected, exiting'
	exit 0
fi

if [[ "$searchstr" != '' ]]; then
	if [[ "$cmd" == 'vim' ]]; then
		cmdopts+=( "+'/$searchstr'" )
	elif [[ "$cmd" == 'v' ]]; then
		( sleep 0.5 && v "!/$searchstr<cr>zv" ) &
	fi
fi

# err "$cmd ${cmdopts[@]} ${files[*]}" # verbose option?
exec $cmd "${cmdopts[@]}" "${files[@]}"
