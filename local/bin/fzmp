#!/usr/bin/env bash

if [[ -e ${HOME}/.bash_utils ]]; then
  source ${HOME}/.bash_utils
else
  echo -e "\e[31mbash_utils not found\e[0m" >&2
  exit 1
fi

fzf() {
  command fzf -e --reverse --cycle +s --inline-info "$@"
}

filterAll() {
  mpc search -f '[[[%artist% / ][[(%date%) ]%album% / ][%title%]]|%file%] \t%file%' filename '' |
    sort |
    fzf -m --with-nth='..-2' --delimiter='\t' |
    cut -f2
}

filterByArtist() {
  local artist album
  artist=$(mpc list artist | sort -h | fzf)
  [[ -z "$artist" ]] && die
  album=$(mpc search -f '[(%date%)]\t%album%' artist "${artist}" |
    sort -u |
    fzf --prompt="$artist > " -1 |
    cut -f2 )
  [[ -z "$album" ]] && die
  mpc search -f '[[[%track% - ][%title%]]|%file%] \t%file%' artist "${artist}" album "${album}" |
    fzf --prompt="$artist - $album > " -m --with-nth='..-2' --delimiter='\t' |
    cut -f2
}

filterByPlayist() {
  mpc playlist -f '[%artist% / ][[(%date%) ]%album% / ][%title%|%file%] \t%file%' |
    fzf --prompt='playlist> ' -m --with-nth='..-2' --delimiter='\t' |
    cut -f2
}

has -v fzf mpc || die
isRunning mpd || die 'mpd not running'

declare filter='filterAll'
while true; do
  case "$1" in
    -a|--artist)   filter='filterByArtist'  ; shift ;;
    -p|--playlist) filter='filterByPlayist' ; shift ;;
    *) break
  esac
done

mapfile -t songs < <("$filter")
if (( ${#songs[@]} > 0 )); then
  printf '%s\n' "${songs[@]}" | mpc -q add
  index=$(mpc playlist | wc -l)
  if (( ${#songs[@]} > 1 )); then
    index=$(( index - ${#songs[@]} + 1))
  fi
  mpc play "$index"
fi
