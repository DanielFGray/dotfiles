#!/usr/bin/env bash

if [[ -e ${HOME}/.bash_utils ]]; then
  source ${HOME}/.bash_utils
else
  echo -e "\e[31mbash_utils not found\e[0m" >&2
  exit 1
fi

has fzf || die 'no fzf'

fzf() {
  command fzf --cycle "$@"
}

pick_files() {
  local files fzpick prettyfiles
  mapfile -t files < <(find . -maxdepth 1 2> /dev/null | sort | sed '1d; s|^\./||')
  fzpick=$( for f in "${files[@]}"; do
    if [[ -d "$f" ]]; then
      printf '%s/\n' "$f"
    elif [[ -L "$f" ]]; then
      printf '%s@\n' "$f"
    else
      printf '%s\n' "$f"
    fi
  done | fzf --multi --header='move these files' ) || return 1
  for f in "${fzpick[@]}"; do
    realpath -s "$f"
  done
}

pick_destination() {
  local cwd browsedir browseinfo query dirs
  cwd=$(pwd)
  while [[ "$browsedir" != "$cwd" ]]; do
    dirs=$( (echo '..'; find -maxdepth 1 -type d 2> /dev/null ) |
      sed 's|./||' |
      sort)
    mapfile -t browseinfo < <(
      fzf --print-query \
      --history=${HOME}/.cache/fzmv_history \
      --header="${errors:-move files here}" <<< "$dirs")
    query=${browseinfo[0]}
    browsedir=${browseinfo[1]}
    [[ -d "$query" ]] && browsedir="$query"
    [[ ! -d "$browsedir" ]] && return 1
    if [[ "$browsedir" == '.' && $(realpath $browsedir) != $cwd ]]; then
      realpath "$browsedir"
      break
    else
      cd "$browsedir"
      continue
    fi
  done
}

while (( $# > 0 )); do
  case $1 in
    -t|--test) dryrun=true ;;
  esac
  shift
done

mapfile -t files < <(pick_files)
[[ ${#files[@]} > 0 ]] || exit 1
destination=$(pick_destination) || exit 1
${dryrun:+echo} mv -t "$destination" "${files[@]}"
