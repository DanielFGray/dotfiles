#!/usr/bin/env lua

function bar(part,width)
	return ("1"):rep(math.floor(part*width))..
		(part*width-math.floor(part*width) >= 0.5 and "2" or "")
end

function round(n)
	return math.floor(n*100+0.5)/100
end

function form(v)
	v = (v ~= v%(1024^3)) and round(v/1024^3) .. "G" or v
	v = tonumber(v) and ((v ~= v%1024^2) and round(v/1024^2) .. "M") or v
	v = tonumber(v) and ((v ~= v%1024) and round(v/1024) .. "K") or v
	return v
end

local du = io.popen("du -b"..(arg[1] or ""))

if not arg[1] then
	dir = "./"
else
	dir = arg[1]:gsub("~",os.getenv("HOME")).."/"
end

fld = {}

for line in du:lines() do
	local bytes,first = line:match("(%d+)%s+"..dir.."(.+)")
	if bytes and first and first == first:match("[^/]+/*")then
		fld[first] = (fld[first] or 0) + bytes
	end
end

local total,max = 0,0
local im,vm = 0,0

for i,v in pairs(fld) do
	total,max = total + v,math.max(max,v)
	vm = math.max(vm,string.len(v))
end

vm = math.max(vm,form(total):len())

local order = {}

for i,_ in pairs(fld) do table.insert(order,i) end
table.sort(order)

local lines = {}

for _,i in pairs(order) do
	v = fld[i]
	local bar = bar(v/max,20)
	bar = (bar == "" and v ~= 0) and "2" or bar
	local pbar = bar:gsub("1","█"):gsub("2","▌")
	
	v = tostring(form(v))
	
	table.insert(lines,table.concat({
		" "..(" "):rep(vm-v:len())..v,
		pbar..(" "):rep(20-bar:len()),i
	}," "))
end

total = form(total)

for i = 1,#lines do
	print(("\027[1;3%sm"):format(math.random(1,6))..lines[i].."\027[0m")
end
print( " "..(" "):rep(vm-string.len(total))..total..(" "):rep(22).."Total")
