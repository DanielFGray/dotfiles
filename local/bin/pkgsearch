#!/usr/bin/env bash

if [[ -e ${HOME}/.bash_utils ]]; then
  source ${HOME}/.bash_utils
else
  echo -e "\e[31mbash_utils not found\e[0m" >&2
  exit 1
fi

declare search

has -v fzf || die

fzf() {
  command fzf -e +s --multi --cycle --ansi --no-hscroll --inline-info --reverse "$@"
}

if [[ -f /etc/debian_version ]]; then
  out=$(fzf --query="$*" < <( \
      apt-cache search '' |
      sed -u -r "s|^([^ ]+)|${c_green}\1${c_reset}|" ) )
  mapfile -t pkgs < <( awk '{print $1}' <<< "$out" )
  (( ${#pkgs} > 0 )) || exit
  sudo $(getCommandFallbacks 'apt' 'apt-get') install "${pkgs[@]}"
elif [[ -f /etc/arch-release ]]; then
  search='pacman'
  (( $# > 0)) && search=$(getCommandFallbacks 'pacaur' 'yaourt' 'packer' 'apacman' 'pacman')
  out=$(fzf < <( $search -Ss "$@" |
      awk '{
        getline descr;
        sub(/ */,"", descr);
        repo = "[" blue gensub(/\/.*/, "", 1) reset "]";
        name = green gensub(/.*\//, "", 1, $1) reset;
        info = gensub(/[^ ]* /, "", 1);
        print repo, name, info, descr;
      }' blue="$c_blue" green="$c_green" reset="$c_reset"
    )
  )
  mapfile -t pkgs < <(awk '{print $2}' <<< "$out")
  (( ${#pkgs} > 0 )) || exit
  echo "installing ${pkgs[*]}"
  ${search/pacman/sudo pacman} -S "${pkgs[@]}"
fi
