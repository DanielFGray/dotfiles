#!/usr/bin/env bash

declare verbose=0
declare esc=$(printf '\033')
declare c_reset="${esc}[0m"
declare c_red="${esc}[31m"
declare c_blue="${esc}[34m"

info() {
  echo -e "${c_blue}$1${c_reset}" >&2
}

err() {
  echo -e "${c_red}$1${c_reset}" >&2
}

die() {
  [[ -n "$1" ]] && err "$1"
  exit 1
}

usage() {
  more <<-'HELP'
Usage: tekup [OPTIONS] [FILES..]
  -h          print this help
  -v          print verbose output. there are two levels of verbosity
              (because this thing is over-engineered), the first will print
              the JSON response from teknik, the second will also pass the
              -v option to curl
HELP
}


upload() {
  local file mime url post curl_verbosity
  file="$1"

  if [[ ! -e "$file" ]]; then
    err "$file does not exist"
    return 1
  fi

  mime=$(file -ib "$file")
  mime="${mime%%/*}"

  if (( verbose < 1 )); then
    curl_verbosity='-s'
  elif (( verbose == 1)); then
    curl_verbosity=''
  else
    curl_verbosity='-v'
  fi

  if [[ $mime == 'text' ]]; then
    post=$(command curl ${curl_verbosity} --data "title=${file##*/}" --data-urlencode "code=$(< "${file}")" https://api.teknik.io/v1/Paste)
  else
    post=$(command curl ${curl_verbosity} -F "contentType=${mime}" -F "file=@${file}" https://api.teknik.io/v1/Upload)
  fi

  (( verbose > 0 )) && info "response: ${c_reset}${post}"

  [[ -z "$post" || "$post" != *'http'* || "$post" == *'error'* ]] && die "error uploading ${file}"

  url=$(grep -oP 'https://[[:alnum:]?=%/_.:,;~@!#$&()*+-]+' <<< "$post")
  echo "${file}: ${url}"
}

if ! command -v curl &> /dev/null; then
  die 'curl not found'
fi

OPTERR=0
while getopts "hv" opt; do
  case "$opt" in
    h) usage; exit 0    ;;
    v) (( verbose++ ))  ;;
  esac
done
shift "$((OPTIND-1))"

(( $# > 0 )) || die 'No files to upload.'

for f in "$@"; do
  upload "$f"
done
