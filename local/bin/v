#!/usr/bin/env bash

usage() {
	cat <<'HELP'
v [OPTIONS] [FILES]
create a new vim server or interact with an existing one

    -h       show this help
    -d       disable focusing on vim
    + 'str'  return expr
    : 'str'  send command
    ! 'str'  send raw keys
HELP
}

has() {
	command -v $1 &> /dev/null
}

err() {
	if [[ -t 0 ]]; then
		echo -e "\e[31m$1\e[0m" >&2
	else
		zenity --error --text="$*" 2> /dev/null
	fi
}

declare noselect
declare sendpane=false
declare -a files
declare -a vimopts

while true; do
	case "$1" in
		'-h'|'--help') usage; exit 0 ;;
		'-d') noselect=true; ;;
		'-s') sendpane=true ;;
		*) break ;;
	esac
	shift
done

selectPane() {
	serv="$1"
	if [[ -n "$TMUX" && "$noselect" != true ]]; then
		pane=$(vim --servername "$serv" --remote-expr '$TMUX_PANE')
		if [[ -n "$pane" ]]; then
			tmux select-pane   -t "$pane"
			tmux select-window -t "$pane"
		fi
	fi
}

serv=$(vim --serverlist | grep -P '^V_[0-9]+$')
if [[ -n "$serv" ]]; then
	vimopts=( "--servername $serv" )
	if (( $# == 0 )); then
		if has fv; then
			if [[ -t 0 ]]; then
				fv -c "v ${noselect:+-d}"
				exit 0
			else
				x-terminal-emulator -e 'fv' '-c' 'v'
			fi
		else
			err 'enter a file name or install fv'
			exit 1
		fi
	else
		while (( $# > 0 )); do
			case "$1" in
				:*)
					vim --servername "$serv" --remote-send "<esc>$1<cr>"
					shift
					;;
				!*)
					vim --servername "$serv" --remote-send "${1:1}"
					shift
					;;
				+*)
					vim --servername "$serv" --remote-expr "${1:1}"
					shift
					;;
				*)
					files+=("$1")
					shift
					;;
			esac
		done
	fi
	for f in "${files[@]}"; do
		# err "found file $f"
		vim --servername "$serv" --remote "$f"
	done
	selectPane "$serv"
elif [[ -t 0 ]]; then
	if [[ "$noselect" != true && -n "$TMUX" ]]; then
		tmux rename-window -t "$TMUX_PANE" 'vim'
		if ! tmux list-sessions -F '#S' | grep 'cmd' &> /dev/null; then
			tmux split-window -t "$TMUX_PANE" -d -v -p 25 'TMUX="" tmux new-session -s "cmd" \; source-file ~/dotfiles/tmux.alt.conf' &
		fi
	fi
	serv="V_$(date +%s)"
	exec vim --servername "$serv"  "$@"
else
	serv="V_$(date +%s)"
	exec gvim --servername "$serv"  "$@"
fi
