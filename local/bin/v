#!/usr/bin/env bash

usage() {
	cat <<'HELP'
v [OPTIONS] [FILES]
create a new vim server or interact with an existing one

    -h       show this help
    -d       disable focusing on vim
    + 'str'  return expr
    : 'str'  send command
    ! 'str'  send raw keys
HELP
}

err() {
	if [[ -t 0 ]]; then
		echo >&2 "$*"
	else
		zenity --error --text="$*" 2> /dev/null
	fi
}

declare select=true
declare sendpane=false

while true; do
	case "$1" in
		'-h'|'--help') usage; exit 0 ;;
		'-d') select=false; ;;
		'-s') sendpane=true ;;
		*) break ;;
	esac
	shift
done

serv=$(vim --serverlist | grep -P '^V_[0-9]+$')
if [[ -n "$serv" ]]; then
	vimeval="vim --servername $serv"
	if [[ -n "$TMUX" && "$select" == true ]]; then
		pane=$($vimeval --remote-expr '$TMUX_PANE')
		if [[ -n "$pane" ]]; then
			tmux select-pane   -t "$pane"
			tmux select-window -t "$pane"
		fi
	fi
	while true; do
		case "$1" in
			:*)
				eval "$vimeval --remote-send '<esc>$1<cr>'"
				shift
				;;
			!*)
				eval "$vimeval --remote-send '${1:1}'"
				shift
				;;
			+*)
				eval "$vimeval --remote-expr '${1:1}'"
				shift
				;;
			* ) break ;;
		esac
	done
	if (( $# > 0 )); then
		eval "$vimeval --remote '$1'"
		shift
	fi
elif [[ -t 0 ]]; then
	if [[ "$select" == true && -n "$TMUX" ]]; then
		tmux rename-window -t "$TMUX_PANE" 'vim'
		if ! tmux list-sessions -F '#S' | grep 'cmd' &> /dev/null; then
			tmux split-window -t "$TMUX_PANE" -d -v -p 25 'TMUX="" tmux new-session -s "cmd" \; source-file ~/dotfiles/tmux.alt.conf' &
		fi
	fi
	exec vim --servername "V_$(date +%s)" "$@"
fi
